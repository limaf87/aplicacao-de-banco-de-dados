USE ABD_03361_A_FELIPE_LIMA;

-- 1 CRIE UMA TABELA CHAMADA COMIDAS_FAVORITAS COM OS CAMPOS: ID, NOME_PESSOA, COMIDA, TIPO
-- NOTA, CIDADE;

CREATE TABLE COMIDAS_FAVORITAS(
	ID INT AUTO_INCREMENT PRIMARY KEY,
    NOME_PESSOA VARCHAR(80) NOT NULL,
    COMIDA VARCHAR(60) NOT NULL,
    TIPO VARCHAR(30) NOT NULL,
    NOTA INT NOT NULL,
    CIDADE VARCHAR(50) NOT NULL
);

-- 2 INSIRA 5 REGISTROS NA TABELA COMIDAS_FAVORITAS
INSERT INTO COMIDAS_FAVORITAS (NOME_PESSOA, COMIDA,TIPO,NOTA,CIDADE) 
VALUES ('LUCAS','FEIJOADA', 'SALGADO', 8, 'RIO DE JANEIRO');
INSERT INTO COMIDAS_FAVORITAS (NOME_PESSOA, COMIDA,TIPO,NOTA,CIDADE) 
VALUES ('SOFIA','PAVÊ', 'DOCE', 9, 'SÃO PAULO');
INSERT INTO COMIDAS_FAVORITAS (NOME_PESSOA, COMIDA,TIPO,NOTA,CIDADE) 
VALUES ('GABRIEL','BIFE À CAVALO', 'SALGADO', 4, 'RIO DE JANEIRO');
INSERT INTO COMIDAS_FAVORITAS (NOME_PESSOA, COMIDA,TIPO,NOTA,CIDADE) 
VALUES ('LAURA','SORVETE', 'DOCE', 7, 'RIO DE JANEIRO');
INSERT INTO COMIDAS_FAVORITAS (NOME_PESSOA, COMIDA,TIPO,NOTA,CIDADE) 
VALUES ('PEDRO','HAMBURGUER', 'SALGADO', 10, 'SÃO PAULO');
INSERT INTO COMIDAS_FAVORITAS (NOME_PESSOA, COMIDA,TIPO,NOTA,CIDADE) 
VALUES ('JESSICA','MACARRÃO À BOLONHESA', 'SALGADO', 10, 'RECIFE');

-- 3 SELECIONE TODAS AS COMIDAS COM NOTA MAIOR QUE 8
SELECT * 
FROM COMIDAS_FAVORITAS
WHERE NOTA > 8;

-- 4 MOSTRE APENAS O NOME DAS PESSOAS E SUAS COMIDAS FAVORITAS DO TIPO DOCE ORDENADA 
-- PELO NOME
SELECT *
FROM COMIDAS_FAVORITAS
WHERE TIPO = 'DOCE'
ORDER BY NOME_PESSOA ASC;

-- 5 MOSTRE AS COMIDAS FAVORITAS DE QUEM MORA EM SÃO PAULO OU RIO DE JANEIRO: USE O IN
SELECT NOME_PESSOA, COMIDA, CIDADE
FROM COMIDAS_FAVORITAS
WHERE CIDADE IN ('SÃO PAULO','RIO DE JANEIRO');

-- 6 ATUALIZE A NOTA DE UMA COMIDA ESPECÍFICA PARA 10 DICA: UPDATE
SELECT * FROM COMIDAS_FAVORITAS;

UPDATE COMIDAS_FAVORITAS
SET NOTA = 6
WHERE ID = 5;

-- 7 ATUALIZE O TIPO DE TODAS AS COMIDAS QUE CONTENHAM A PALAVRA PIZZA PARA SALGADO DICA: USE LIKE
SET SQL_SAFE_UPDATES = 0;
UPDATE COMIDAS_FAVORITAS
SET TIPO = 'SALGADO'
WHERE COMIDA LIKE '%PIZZA%';

-- 8 EXCLUA TODAS AS COMIDAS QUE TENHAM NOTA MENOR QUE 5:
DELETE FROM COMIDAS_FAVORITAS
WHERE NOTA < 5;

-- DESAFIO
-- 9 MOSTRE O NOME DA PESSOA E A COMIDA FAVORITA ONDE O NOME_TENHA MAIS DE 10 CARACTERES
-- E A NOTA ESTEJA ENTRE 7 E 10 DICA: USE LENGTH() E BETWEEN
SELECT NOME_PESSOA, COMIDA, NOTA
FROM COMIDAS_FAVORITAS
WHERE LENGTH(NOME_PESSOA) > 10 AND NOTA BETWEEN 7 AND 10;

-- EXERCICIOS PRATICOS 2

-- 1 CRIAR UMA TABELA COM O NOME ERRADO PARA SIMULAR UM ERRO
-- OBJETIVO: PRATICAR DROP CRIANDO ALGO ERRADO DE PROPÓSITO
-- DICA: USE UM NOME ERRADO(EX: COMIDAS_FAV) E VEJA COMO CORRIGIR DEPOIS
CREATE TABLE FILMES_FAVOTITOS(	
	ID INT AUTO_INCREMENT PRIMARY KEY,
    NOME_FILME VARCHAR(80) NOT NULL,
    GENERO VARCHAR(60) NOT NULL,
    ANO_LANÇAMENTO INT NOT NULL
);

-- 2 APAGAR A TABELA COM NOME ERRADO USANDO O DROP
-- OBJETIVO: REMOVER A TABELA INCORRETA
-- DICA: DEFINA TIPOS E TAMANHOS DE DADOS CORRETOS DESDE O INICIO.


DROP table FILMES_FAVOTITOS;

-- 3 CRIAR NOVAMENTE A TABELA COM O NOME CORRETO
-- OBJETIVO: RECRIAR A TABELA COM O NOME CERTO E COLUNAS BÁSICAS
-- DICA: DEFINA TIPOS E TAMANHOS DE DADOS CORRETOS DESDE O INICIO
--
CREATE TABLE FILMES_FAVORITOS(	
	ID INT AUTO_INCREMENT PRIMARY KEY,
    NOME_FILME VARCHAR(80) NOT NULL,
    GENERO VARCHAR(60) NOT NULL,
    ANO_LANÇAMENTO INT NOT NULL
);

-- 4 ADICIONAR UMA NOVA COLUNA QUE ESQUECEMOS, USANDO O ALTER TABLE
-- OBJETIVO: PRATICAR INSERT COM MULTIPLAS LINHAS
-- DICA:  USE ALTER TABLE NOME_TABELA ADD NOME_COLUNA

ALTER TABLE FILMES_FAVORITOS ADD NOTA INT NOT NULL;

-- 5 INSERIR DOIS REGISTROS NA TABELA
-- OBJETIVO: PRATICAR INSERT COM MULTUPLAS LINHAS
-- DICA: USE INSERT INTO ... VALUES (...), (...)

INSERT INTO FILMES_FAVORITOS (NOME_FILME, GENERO,ANO_LANÇAMENTO,NOTA) 
VALUES ('Interestelar','Ficção Científica', 2014, 10),
('Vingadores: Ultimato','Ação', 2019, 10);

-- 6 VERIFICAR SE OS DADOS FORAM INSERIDOS
-- OBJETIVO: CONFIRMAR COM SELECT SE OS DADOS ESTÃO CORRETOS
-- DICA: USE SELECT * FROM NOME_TABELA

SELECT * 
FROM FILMES_FAVORITOS;

-- 7 LIMPAR TODA A TABELA USANDO O TRUNCATE
-- OBJETIVO: APAGAR TODOS OS REGISTROS RAPIDAMENTE
-- DICA: TRUNCATE É MAIS RÁPIDO QUE DELETE E REINICIA O AUTO_INCREMENT

TRUNCATE TABLE FILMES_FAVORITOS;

-- 8 CONFERIR QUE A TABELA ESTÁ VAZIA, MAS A ESTRUTURA PERMANECE
-- OBJETIVO: TESTAR SELECT E CONFIRMA QUE A ESTRUTURA AINDA EXISTE.
-- DICA: USE SELECT COUNT(*) E SHOW CREATE TABLE
SELECT COUNT(*) 
FROM FILMES_FAVORITOS;

SHOW CREATE TABLE FILMES_FAVORITOS;

-- 9 LIMPAR TODA A TABELA USANDO O DELETE
-- OBJETIVO: APAGAR TODOS OS REGISTROS RAPIDAMENTE

DELETE FROM FILMES_FAVORITOS WHERE ID = 3;

-- 10 DELETAR UMA COLUNA NOTA

ALTER TABLE FILMES_FAVORITOS
DROP COLUMN NOTA;

-- TIPOS DE PERMISSÕES
-- SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, ALL PRIVILEGES.
GRANT SELEC, INSERT ON FILMES_FAVORITOS TO 'professor'@'%';

REVOKE SELECT ON FILMES_FAVORITOS FROM 'professor'@'%';


BEGIN TRANSACTION;



COMMIT;